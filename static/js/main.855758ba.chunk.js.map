{"version":3,"sources":["components/ExpenseDate/ExpenseDate.js","components/ExpenseItem/ExpenseItem.js","components/ExpenseFilter/ExpenseFilter.js","components/ChartBar/ChartBar.js","components/Chart/Chart.js","components/ExpensesChart/ExpensesChart.js","components/ExpenseList/ExpenseList.js","components/NewExpense/NewExpense.js","App.js","reportWebVitals.js","index.js"],"names":["ExpenseDate","props","year","this","date","getFullYear","month","toLocaleString","day","getDate","className","Component","ExpenseItem","state","expenseTitle","expenseAmount","ExpenseFilter","avaliableYears","forEach","item","push","value","selectedYear","onChange","handleFilterByYear","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","map","point","totalMaximum","max","id","ExpensesChart","chartDataPoints","getChartDataPoints","expenses","expense","expenseMonth","getMonth","ExpenseList","event","target","setState","filter","toString","expensesList","getFilteredExpenses","renderExpenseItem","length","bind","React","NewExpense","title","amount","showForm","name","type","checked","preventDefault","newExpense","Date","addNewExpense","onSubmit","handleSubmit","htmlFor","handleChange","min","onClick","handeleClickToggle","App","slice","random","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.855758ba.chunk.js","sourcesContent":["import {Component} from 'react';\r\n\r\nclass ExpenseDate extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        let year = this.props.date.getFullYear();\r\n        let month = this.props.date.toLocaleString('default', { month: 'long' });\r\n        let day = this.props.date.getDate();\r\n\r\n        return(\r\n            <div className=\"expense-date\">\r\n                <div className=\"expense-date__month\">{month}</div>\r\n                <div className=\"expense-date__year\">{year}</div>\r\n                <div className=\"expense-date__day\">{day}</div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default ExpenseDate;\r\n","import React, { Component } from \"react\";\r\nimport ExpenseDate from '../ExpenseDate/ExpenseDate';\r\n\r\nclass ExpenseItem extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            date: props.date,\r\n            expenseTitle: props.expenseTitle,\r\n            expenseAmount: props.expenseAmount\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"expense-item\">\r\n                <ExpenseDate date={this.state.date}/>\r\n                <div className=\"expense-item__description\">\r\n                    <h2>{this.state.expenseTitle}</h2>\r\n                    <div className=\"expense-item__price\">${this.state.expenseAmount}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseItem;\r\n","import { Component } from \"react\";\r\n\r\nclass ExpenseFilter extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const avaliableYears = [];\r\n\r\n        this.props.avaliableYears.forEach((item) => {\r\n            avaliableYears.push(<option key={item} value={item}>{item}</option>);\r\n        });\r\n\r\n        return (\r\n            <div className='expenses-filter'>\r\n                <div className='expenses-filter__control'>\r\n                    <label>Filter by year</label>\r\n                    <select value={this.props.selectedYear} onChange={this.props.handleFilterByYear}>\r\n                        {avaliableYears}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseFilter;","import { Component } from 'react';\r\n\r\nclass ChartBar extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    \r\n    render() {\r\n        let barFillHeight = '0%';\r\n\r\n\r\n\r\n        if (this.props.maxValue > 0) {\r\n            barFillHeight = Math.round((this.props.value / this.props.maxValue) * 100) + '%';\r\n        }\r\n\r\n        return(\r\n            <div className=\"chart-bar\">\r\n                <div className=\"chart-bar__inner\">\r\n                    <div style={{height: barFillHeight}} className=\"chart-bar__fill\">\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"chart-bar__label\">\r\n                    {this.props.label}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ChartBar;","import { Component } from 'react';\r\nimport ChartBar from \"../ChartBar/ChartBar\";\r\n\r\nclass Chart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const dataPointValues = this.props.dataPoints.map(point => point.value);\r\n        const totalMaximum = Math.max(...dataPointValues);\r\n\r\n        let dataPoints = this.props.dataPoints.map((point) => {\r\n            return <ChartBar key={point.id} value={point.value} maxValue={totalMaximum} label={point.label}/>\r\n        });\r\n\r\n        return(\r\n            <div className=\"chart\">\r\n                {dataPoints}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Chart;","import { Component} from \"react\";\r\nimport Chart from \"../Chart/Chart\";\r\n\r\nclass ExpensesChart extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getChartDataPoints() {\r\n        return [\r\n            { label: 'Jan', value: 0 },\r\n            { label: 'Feb', value: 0 },\r\n            { label: 'Mar', value: 0 },\r\n            { label: 'Apr', value: 0 },\r\n            { label: 'May', value: 0 },\r\n            { label: 'Jun', value: 0 },\r\n            { label: 'Jul', value: 0 },\r\n            { label: 'Aug', value: 0 },\r\n            { label: 'Sep', value: 0 },\r\n            { label: 'Oct', value: 0 },\r\n            { label: 'Nov', value: 0 },\r\n            { label: 'Dec', value: 0 },\r\n        ];\r\n    }\r\n\r\n\r\n    render() {\r\n        const chartDataPoints = this.getChartDataPoints();\r\n        this.props.expenses.forEach((expense) => {\r\n            const expenseMonth = expense.date.getMonth();\r\n\r\n            chartDataPoints[expenseMonth].value += expense.expenseAmount;\r\n        });\r\n\r\n        return(<Chart dataPoints={chartDataPoints}/>);\r\n    }\r\n\r\n}\r\n\r\nexport default ExpensesChart;","import React from \"react\";\r\nimport ExpenseItem from '../ExpenseItem/ExpenseItem';\r\nimport ExpenseFilter from '../ExpenseFilter/ExpenseFilter';\r\nimport ExpensesChart from \"../ExpensesChart/ExpensesChart\";\r\n\r\nclass ExpenseList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            avaliableYears: ['2019', '2020', '2021', '2022'],\r\n            selectedYear: '2021',\r\n        }\r\n    }\r\n\r\n    renderExpenseItem(item) {\r\n        return (\r\n            <ExpenseItem\r\n                date={item.date}\r\n                key={item.id}\r\n                expenseTitle={item.expenseTitle}\r\n                expenseAmount={item.expenseAmount}\r\n            />\r\n        );\r\n    }\r\n\r\n    handleFilterByYear(event) {\r\n        const selectedYear = event.target.value;\r\n\r\n        this.setState({\r\n            selectedYear: selectedYear\r\n        })\r\n    }\r\n\r\n    getFilteredExpenses() {\r\n        return this.props.expenses.filter((item) => {\r\n            return this.state.selectedYear === item.date.getFullYear().toString();\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        let expensesList = this.getFilteredExpenses().map((item) => {\r\n           return this.renderExpenseItem(item);\r\n        });\r\n\r\n        if (!expensesList.length) {\r\n            expensesList = <p>No expenses found</p>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"expenses\">\r\n                <ExpensesChart expenses={this.getFilteredExpenses()}/>\r\n                <ExpenseFilter\r\n                    handleFilterByYear={this.handleFilterByYear.bind(this)}\r\n                    avaliableYears={this.state.avaliableYears}\r\n                    selectedYear={this.state.selectedYear}\r\n                />\r\n                { expensesList }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ExpenseList;\r\n","import {Component} from 'react';\r\n\r\nclass NewExpense extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            title: '',\r\n            amount: '',\r\n            date: '',\r\n            showForm: false,\r\n        }\r\n    }\r\n\r\n    handleChange(event) {\r\n        const target = event.target;\r\n        const name = target.name;\r\n        const value =  target.type === 'checkbox' ? target.checked : target.value;\r\n\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        event.preventDefault();\r\n\r\n        const newExpense = {\r\n            expenseTitle: this.state.title,\r\n            expenseAmount: +this.state.amount,\r\n            date: new Date(this.state.date),\r\n        }\r\n\r\n        this.props.addNewExpense(newExpense)\r\n\r\n        this.setState({\r\n            title: '',\r\n            amount: '',\r\n            date: '',\r\n        })\r\n    }\r\n\r\n    handeleClickToggle() {\r\n        this.setState((state) => {\r\n            return {\r\n                showForm: !state.showForm\r\n            }\r\n        })\r\n    } \r\n\r\n    render() {\r\n        return(\r\n            <div className=\"new-expense\">\r\n                <form onSubmit={this.handleSubmit.bind(this)} className={this.state.showForm ? '' : 'hidden'}>\r\n                    <div className=\"new-expense__controls\">\r\n                        <div className=\"new-expense__control\">\r\n                            <label htmlFor=\"title\">Title</label>\r\n                            <input id=\"title\" name=\"title\" value={this.state.title} type=\"text\" onChange={this.handleChange.bind(this)}/>\r\n                        </div>\r\n                        <div className=\"new-expense__control\">\r\n                            <label htmlFor=\"amount\">Amount</label>\r\n                            <input id=\"amount\" name=\"amount\" value={this.state.amount} type=\"number\" onChange={this.handleChange.bind(this)}/>\r\n                        </div>\r\n                        <div className=\"new-expense__control\">\r\n                            <label htmlFor=\"date\">Date</label>\r\n                            <input id=\"date\" name=\"date\" value={this.state.date} type=\"date\" min=\"2019-01-01\" onChange={this.handleChange.bind(this)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"new-expense__actions\">\r\n                        <button className=\"alternative\" onClick={this.handeleClickToggle.bind(this)}>Cancel</button>\r\n                        <button type=\"submit\">Add Expense</button>\r\n                    </div>\r\n                </form>\r\n                <button className=\"new-expense--toggle\" className={this.state.showForm ? 'hidden' : ''} onClick={this.handeleClickToggle.bind(this)}>Add New Expense</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewExpense;\r\n","import './App.css';\n\nimport { Component } from \"react\";\n\nimport ExpenseList from './components/ExpenseList/ExpenseList';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nclass App extends Component {\n\n    constructor() {\n        super();\n\n        this.state = {\n            avaliableYears: ['none','2019', '2020', '2021', '2022'],\n            expenses: [\n                {id: '1', date: new Date(2020, 7, 14), expenseTitle: 'Car', expenseAmount: 255.55},\n                {id: '2', date: new Date(2021, 2, 28), expenseTitle: 'Car', expenseAmount: 255.55},\n                {id: '3', date: new Date(2021, 5, 12), expenseTitle: 'Cat', expenseAmount: 242.55},\n            ],\n        }\n    }\n\n    addNewExpense(newExpense) {\n        const expenses = this.state.expenses.slice();\n        newExpense.id = Math.random(Math.random() * 200000);\n\n        this.setState({\n            expenses: [newExpense, ...this.state.expenses]\n        })\n    }\n\n    render() {\n        return(\n            <div>\n                <NewExpense addNewExpense={this.addNewExpense.bind(this)}/>\n                <ExpenseList expenses={this.state.expenses}/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}